** Workflow to-do's

*** Monte-carlo tree search
***** TODO investigate theory and implement in code to approximate minimax tree given certain time threshold
***** show that minimax and monte-carlo trees converge in practice, perhaps for smaller trees

*** Presentation
***** TODO save graphs as images, dotfiles and pickles to binary which can be used later -> modify readmes correspondingly
***** TODO update pull request documentation with changes till now
***** add consistent pydocstrings to all parts of code

*** Minimax algorithm
***** TODO review pull request which might require editing of full_time.lp encodings
***** check if possible to use reverse level iterator without list conversion

*** Optimizations
***** TODO optimize mini-max algorithm with fewer tree visits where possible, might need to look into exact source code within step/state
***** add parallelization to all scripts, linear time reduction
      
*** Extra: game encodings
***** possible to terminate nim even one step earlier with next has
***** add asp encodings for tic-tac-toe, add ability to read more diverse encodings

*** Long-term goals
***** build efficient mini-max algorithm and integrate alpha-beta pruning
***** integrate monte-carlo tree search to auto-generate good and bad examples for ilasp
***** show that monte-carlo approach can approximate minimax tree
***** integrate this approach with asp/ilasp to provide bravely ordered samples for complex games
