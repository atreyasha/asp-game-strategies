[
    {
        "command": "minmax --log=error --n=1 --game-name=nim --init=initial_S.lp --out=S.json --tree-name=S.json",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "S.json",
            "selected_approach": "minmax",
            "tree_image_file_name": null,
            "tree_name": "S.json",
            "main_player": "a"
        },
        "initial_state": "control(a).has(1,1).has(2,2).has(3,3).has(4,0)",
        "results": {
            "player": "minmax",
            "build": [
                776.886
            ],
            "average_build": 776.886,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 208
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=1 --game-name=nim --init=initial_S.lp --out=S.json --tree-name=S.json",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "S.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": "S.json",
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": null,
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,1).has(2,2).has(3,3).has(4,0)",
        "results": {
            "player": "pruned_minmax",
            "build": [
                4071.862
            ],
            "average_build": 4071.862,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 134
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=1 --game-name=nim --init=initial_S.lp --out=S.json --rules=S.lp",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "S.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": null,
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": "S.lp",
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,1).has(2,2).has(3,3).has(4,0)",
        "results": {
            "player": "pruned_minmax_learning",
            "build": [
                2117.198
            ],
            "average_build": 2117.198,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 50
            }
        }
    },
    {
        "command": "minmax --log=error --n=1 --game-name=nim --init=initial_M.lp --out=M.json --tree-name=M.json",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "M.json",
            "selected_approach": "minmax",
            "tree_image_file_name": null,
            "tree_name": "M.json",
            "main_player": "a"
        },
        "initial_state": "control(a).has(1,1).has(2,2).has(3,3).has(4,5)",
        "results": {
            "player": "minmax",
            "build": [
                546166.203
            ],
            "average_build": 546166.203,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 106729
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=1 --game-name=nim --init=initial_M.lp --out=M.json --tree-name=M.json",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "M.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": "M.json",
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": null,
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,1).has(2,2).has(3,3).has(4,5)",
        "results": {
            "player": "pruned_minmax",
            "build": [
                330139.468
            ],
            "average_build": 330139.468,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 6314
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=1 --game-name=nim --init=initial_M.lp --out=M.json --rules=M.lp",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "M.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": null,
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": "M.lp",
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,1).has(2,2).has(3,3).has(4,5)",
        "results": {
            "player": "pruned_minmax_learning",
            "build": [
                47246.622
            ],
            "average_build": 47246.622,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 403
            }
        }
    },
    {
        "command": "minmax --log=error --n=1 --game-name=ttt --init=initial_S.lp --out=S.json --tree-name=S.json",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "S.json",
            "selected_approach": "minmax",
            "tree_image_file_name": null,
            "tree_name": "S.json",
            "main_player": "a"
        },
        "initial_state": "control(a).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,2)).has(a,cell(1,2)).has(a,cell(3,1)).has(b,cell(1,1)).has(b,cell(3,3))",
        "results": {
            "player": "minmax",
            "build": [
                880.698
            ],
            "average_build": 880.698,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 185
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=1 --game-name=ttt --init=initial_S.lp --out=S.json --tree-name=S.json",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "S.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": "S.json",
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": null,
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,2)).has(a,cell(1,2)).has(a,cell(3,1)).has(b,cell(1,1)).has(b,cell(3,3))",
        "results": {
            "player": "pruned_minmax",
            "build": [
                349.346
            ],
            "average_build": 349.346,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 31
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=1 --game-name=ttt --init=initial_S.lp --out=S.json --rules=S.lp",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "S.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": null,
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": "S.lp",
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,2)).has(a,cell(1,2)).has(a,cell(3,1)).has(b,cell(1,1)).has(b,cell(3,3))",
        "results": {
            "player": "pruned_minmax_learning",
            "build": [
                412.284
            ],
            "average_build": 412.284,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 26
            }
        }
    },
    {
        "command": "ilasp --log=error --n=1 --game-name=ttt --init=initial_S.lp --out=S.json --strategy-name=S.lp --background-path=./game_definitions/ttt/background.lp",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "S.json",
            "selected_approach": "ilasp",
            "main_player": "a",
            "ilasp_examples_file_name": "temp_examples.las",
            "language_bias_name": "final.las",
            "background_path": "./game_definitions/ttt/background.lp",
            "strategy_name": "S.lp",
            "ilasp_arg": null,
            "rules_file_name": null,
            "tree_image_file_name": null,
            "train_file_name": null,
            "tree_name": null,
            "first_build": false
        },
        "initial_state": "control(a).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,2)).has(a,cell(1,2)).has(a,cell(3,1)).has(b,cell(1,1)).has(b,cell(3,3))",
        "results": {
            "player": "ilasp",
            "build": [
                24812.861
            ],
            "average_build": 24812.861,
            "std": 0.0,
            "special_results": null
        }
    },
    {
        "command": "minmax --log=error --n=1 --game-name=ttt --init=initial_M.lp --out=M.json --tree-name=M.json",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "M.json",
            "selected_approach": "minmax",
            "tree_image_file_name": null,
            "tree_name": "M.json",
            "main_player": "a"
        },
        "initial_state": "control(a).free(cell(1,1)).free(cell(1,2)).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,2)).has(a,cell(3,1)).has(b,cell(3,3))",
        "results": {
            "player": "minmax",
            "build": [
                35108.682
            ],
            "average_build": 35108.682,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 7583
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=1 --game-name=ttt --init=initial_M.lp --out=M.json --tree-name=M.json",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "M.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": "M.json",
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": null,
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).free(cell(1,1)).free(cell(1,2)).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,2)).has(a,cell(3,1)).has(b,cell(3,3))",
        "results": {
            "player": "pruned_minmax",
            "build": [
                1024.496
            ],
            "average_build": 1024.496,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 82
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=1 --game-name=ttt --init=initial_M.lp --out=M.json --rules=M.lp",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "M.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": null,
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": "M.lp",
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).free(cell(1,1)).free(cell(1,2)).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,2)).has(a,cell(3,1)).has(b,cell(3,3))",
        "results": {
            "player": "pruned_minmax_learning",
            "build": [
                1541.422
            ],
            "average_build": 1541.422,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 66
            }
        }
    },
    {
        "command": "ilasp --log=error --n=1 --game-name=ttt --init=initial_M.lp --out=M.json --strategy-name=M.lp --background-path=./game_definitions/ttt/background.lp",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "M.json",
            "selected_approach": "ilasp",
            "main_player": "a",
            "ilasp_examples_file_name": "temp_examples.las",
            "language_bias_name": "final.las",
            "background_path": "./game_definitions/ttt/background.lp",
            "strategy_name": "M.lp",
            "ilasp_arg": null,
            "rules_file_name": null,
            "tree_image_file_name": null,
            "train_file_name": null,
            "tree_name": null,
            "first_build": false
        },
        "initial_state": "control(a).free(cell(1,1)).free(cell(1,2)).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,2)).has(a,cell(3,1)).has(b,cell(3,3))",
        "results": {
            "player": "ilasp",
            "build": [
                21429.145
            ],
            "average_build": 21429.145,
            "std": 0.0,
            "special_results": null
        }
    },
    {
        "command": "pruned_minmax --log=error --n=1 --game-name=ttt --init=initial_M.lp --out=M.json --tree-name=M.json",
        "args": {
            "log": "error",
            "game_name": "ttt",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "M.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": "M.json",
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": null,
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).free(cell(1,1)).free(cell(1,2)).free(cell(1,3)).free(cell(2,1)).free(cell(2,2)).free(cell(2,3)).free(cell(3,2)).has(a,cell(3,1)).has(b,cell(3,3))",
        "results": {
            "player": "pruned_minmax",
            "build": [
                1003.914
            ],
            "average_build": 1003.914,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 82
            }
        }
    },
    {
        "command": "pruned_minmax --log=error --n=1 --game-name=nim --init=initial_M.lp --out=M.json --tree-name=M.json",
        "args": {
            "log": "error",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "M.json",
            "selected_approach": "pruned_minmax",
            "tree_image_file_name": null,
            "tree_name": "M.json",
            "main_player": "a",
            "ilasp_examples_file_name": null,
            "rules_file_name": null,
            "train_file_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,1).has(2,2).has(3,3).has(4,5)",
        "results": {
            "player": "pruned_minmax",
            "build": [
                323821.034
            ],
            "average_build": 323821.034,
            "std": 0.0,
            "special_results": {
                "number_of_nodes": 6314
            }
        }
    },
    {
        "command": "ilasp --game-name=nim --background-path=./approaches/ilasp/nim/background.lp --log=debug --init=initial_S.lp --strategy-name=rec.lp",
        "args": {
            "log": "debug",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "console",
            "selected_approach": "ilasp",
            "main_player": "a",
            "ilasp_examples_file_name": "temp_examples.las",
            "language_bias_name": "final.las",
            "background_path": "./approaches/ilasp/nim/background.lp",
            "strategy_name": "rec.lp",
            "ilasp_arg": null,
            "rules_file_name": null,
            "tree_image_file_name": null,
            "train_file_name": null,
            "tree_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,1).has(2,2).has(3,3).has(4,0)",
        "results": {
            "player": "ilasp",
            "build": [
                4338.31
            ],
            "average_build": 4338.31,
            "std": 0.0,
            "special_results": null
        }
    },
    {
        "command": "ilasp --game-name=nim --background-path=./approaches/ilasp/nim/background.lp --log=debug --init=initial_M.lp --strategy-name=recM.lp",
        "args": {
            "log": "debug",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_M.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "console",
            "selected_approach": "ilasp",
            "main_player": "a",
            "ilasp_examples_file_name": "temp_examples.las",
            "language_bias_name": "final.las",
            "background_path": "./approaches/ilasp/nim/background.lp",
            "strategy_name": "recM.lp",
            "ilasp_arg": null,
            "rules_file_name": null,
            "tree_image_file_name": null,
            "train_file_name": null,
            "tree_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,1).has(2,2).has(3,3).has(4,5)",
        "results": {
            "player": "ilasp",
            "build": [
                377471.985
            ],
            "average_build": 377471.985,
            "std": 0.0,
            "special_results": null
        }
    },
    {
        "command": "ilasp --game-name=nim --background-path=./approaches/ilasp/nim/background.lp --log=debug --init=initial_S.lp --strategy-name=rec.lp",
        "args": {
            "log": "debug",
            "game_name": "nim",
            "const": null,
            "random_initial_state_seed": null,
            "initial": "initial_S.lp",
            "num_repetitions": 1,
            "benchmark_output_file": "console",
            "selected_approach": "ilasp",
            "main_player": "a",
            "ilasp_examples_file_name": "temp_examples.las",
            "language_bias_name": "final.las",
            "background_path": "./approaches/ilasp/nim/background.lp",
            "strategy_name": "rec.lp",
            "ilasp_arg": null,
            "rules_file_name": null,
            "tree_image_file_name": null,
            "train_file_name": null,
            "tree_name": null,
            "first_build": false
        },
        "initial_state": "control(a).has(1,1).has(2,2).has(3,3).has(4,0)",
        "results": {
            "player": "ilasp",
            "build": [
                4139.483
            ],
            "average_build": 4139.483,
            "std": 0.0,
            "special_results": null
        }
    }
]